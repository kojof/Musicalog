{"version":3,"sources":["./src/environments/environment.ts","./src/app/button-renderer.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/album.service.ts","./src/app/album/album.component.ts","./src/app/album/album.component.html","./src/app/album/add-detail/add-detail.component.ts","./src/app/album/add-detail/add-detail.component.html","./src/app/album/edit-detail/edit-detail.component.ts","./src/app/album/edit-detail/edit-detail.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: '/api',\n  albumWebAPIUrl: 'http://localhost:22157',\n  gridPageSize: 10\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'app-button-renderer',\r\n    template: `\r\n    <button type=\"button\" (click)=\"onClick($event)\">{{label}}</button>\r\n    `\r\n})\r\n\r\nexport class ButtonRendererComponent implements ICellRendererAngularComp {\r\n\r\n    params;\r\n    label: string;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n        this.label = this.params.label || null;\r\n    }\r\n\r\n    refresh(params?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    onClick($event) {\r\n        if (this.params.onClick instanceof Function) {\r\n            // put anything into params u want pass into parents component\r\n            const params = {\r\n                event: $event,\r\n                rowData: this.params.node.data\r\n                // ...something\r\n            }\r\n            this.params.onClick(this.params);\r\n\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Musicalog  - Music Store Catalog';\n}\n","<h1>{{title}}</h1>\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AlbumComponent } from './album/album.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ButtonRendererComponent } from './button-renderer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AlbumService } from './services/album.service';\nimport { AddDetailComponent } from './album/add-detail/add-detail.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { EditDetailComponent } from './album/edit-detail/edit-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlbumComponent, ButtonRendererComponent, AddDetailComponent, EditDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([ButtonRendererComponent])\n  ],\n  providers: [AlbumService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, from} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Album } from '../model/album';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumService {\n\n  constructor(private readonly httpClient: HttpClient) {\n  }\n\n  public deleteAlbum(id: any) {\n    return this.httpClient.delete(`${environment.albumWebAPIUrl}/Delete?id=` + id).subscribe((data) => {\n      console.log(data);\n  });\n }\n\n  public getAll(): Observable<Album[]> {\n      return this.httpClient.get<Album[]>(`${environment.albumWebAPIUrl}/getall`);\n  }\n\n  public getAlbumById(id: number): Observable<Album> {\n      return (this.httpClient.get<Album>(`${environment.albumWebAPIUrl}/getbyid?id=` + id));\n  }\n\n  public addAlbum(album: Album): Observable<any> {\n\n    album.AlbumType = {Id: 2, Name: 'CD'};\n    return this.httpClient.post<string>(`${environment.albumWebAPIUrl}/add`, album);\n  }\n\n    public editAlbum(album: Album): Observable<any>{\n        album.AlbumType = { Id: 2, Name: 'CD' };\n    return this.httpClient.put<Album>(`${environment.albumWebAPIUrl}/edit`, album);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlbumService } from '../services/album.service';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { GridApi, GridOptions } from 'ag-grid-community';\nimport { ToastrService } from 'ngx-toastr';\nimport { Album } from '../model/album';\nimport { ButtonRendererComponent } from './../button-renderer.component';\n\n@Component({\n    selector: 'app-album',\n    templateUrl: './album.component.html',\n    styleUrls: ['./album.component.css']\n})\nexport class AlbumComponent implements OnInit  {\n\n    title = 'Musicalog - Music Catalog Web';\n\n    gridApi: GridApi;\n    private getRowNodeId;\n    private rowData;\n    public albums: Album[];\n    frameworkComponents: any;\n\n    gridOptions: GridOptions = {\n\n        paginationPageSize: environment.gridPageSize\n    }; \n\n    columnDefs = [\n        { headerName: 'Id', field: 'Id', sortable: true, filter: true },\n        { headerName: 'Album Name', field: 'Name', sortable: true, filter: true },\n        { headerName: 'Artist', field: 'Artist', sortable: true, filter: true },\n        { headerName: 'Type', field: 'AlbumType.Name', sortable: true, filter: true },\n        { headerName: 'Stock', field: 'Stock', sortable: true, filter: true },\n        { headerName: 'Edit', field: 'Id', sortable: true, cellRenderer: this.createHyperLink.bind(this), },\n        {\n            headerName: 'Delete',\n            cellRenderer: 'buttonRenderer',\n            cellRendererParams: {\n                onClick: this.onDeleteButtonClick.bind(this),\n                label: 'Remove from Catalog'\n            }\n        }\n    ];\n\n    constructor(private readonly albumService: AlbumService, private router: Router, private toastr: ToastrService) {\n        this.frameworkComponents = {\n            buttonRenderer: ButtonRendererComponent,\n        };\n\n        this.getRowNodeId = (params) => {\n            return params.id;\n        };\n    }\n\n    ngOnInit(): void {\n        this.albumService.getAll().subscribe(\n          data => {\n            this.albums = data;\n            console.log(this.albums)\n          }\n        );\n\n    //     this.albumService.getAll().subscribe( data => this.albums = data);\n      }\n\n    removeRowData = () => {\n        const focusedNode = this.gridApi.getSelectedRows()[0];\n        const newRowData = this.rowData.filter(row => {\n            return row !== focusedNode;\n        });\n        this.rowData = newRowData;\n    }\n\n    onDeleteButtonClick(params): void {\n        console.log(params.data.Id);\n        const id = params.data.Id;\n\n      //  const selectedRows =  this.gridApi.getSelectedRows();\n\n        // if (selectedRows.length == 0) {\n        //   this.toastr.error(\"error\", \"Please select an Album for deletion\");\n        //   return;\n        // }\n\n        // this.albumService.deleteAlbum(id).subscribe(data =>{\n        //     this.toastr.success(\"success\", data);\n        //     this.ngOnInit();\n        //     this.gridApi.refreshRows(null);\n        //   });\n\n        if (id != null) {\n            //  debugger;\n            this.albumService.deleteAlbum(id);\n            this.ngOnInit();\n            this.gridApi.refreshRows(null);\n            this.router.navigate(['albums']);\n        }\n    }\n\n    onGridReady(params): void  {\n        this.gridApi = params.api;\n    }\n\n    createHyperLink(params): any {\n        if (!params.data) {\n            return;\n        }\n     \n        const spanElement = document.createElement('span');\n        spanElement.innerHTML = `<a href=\"${this.editAlbumDetailUrl(params.data.Id)}\">Edit</a> `;\n        spanElement.addEventListener('click',\n            ($event) => {\n                $event.preventDefault();\n                this.router.navigate([this.editAlbumDetailUrl(params.data.Id)]);\n            });\n        return spanElement;\n    }\n\n\n    AddAlbum(): void {\n        this.router.navigate(['addDetail']);\n    }\n\n    editAlbumDetailUrl(id: string): string {\n        return 'editDetail/' + id;\n    }\n}\n\n\n\n","\n<div class=\"jumbotron\">\n   \n    <p class=\"lead\">This is your one stop shop to view all your favourite artists</p>\n</div>\n\n\n <div class=\"row\">\n        <div class=\"col-md-8\"></div>\n        <div class=\"col-md-4\">\n    <button class=\"btn btn-sm btn-success button\" (click)=\"AddAlbum()\">Add Album</button>\n  \n</div>\n<div class=\"row\">\n    \n    <div class=\"col-md-12\">\n\n        <ag-grid-angular class=\"ag-theme-blue\" style=\"width: 100%; height: 300px;\"\n                         [rowData]=\"albums\"\n                         (gridReady)=\"onGridReady($event)\"\n                         [frameworkComponents]=\"frameworkComponents\"\n                         [pagination]=\"true\"\n                         [gridOptions]=\"gridOptions\"\n                         [columnDefs]=\"columnDefs\">\n        </ag-grid-angular>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AlbumService } from 'src/app/services/album.service';\n\n@Component({\n  selector: 'app-add-detail',\n  templateUrl: './add-detail.component.html',\n  styleUrls: ['./add-detail.component.css']\n})\n\nexport class AddDetailComponent implements OnInit {\n  submitted = false;\n  albumForm: any;\n\n  constructor(private formBuilder: FormBuilder, private albumService: AlbumService, private router: Router,private toastr: ToastrService) {}\n\n  ngOnInit(): void {\n    this.albumForm = this.formBuilder.group({\n        Name : [ '', Validators.required],\n        Stock : [ '', Validators.required],\n        Artist : [ '', Validators.required],\n        Label : [ '', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.albumForm.invalid) {\n      return;\n    }\n\n    this.albumService.addAlbum(this.albumForm.value)\n      .subscribe( data => {\n        this.toastr.success('success', 'Record saved');\n        this.router.navigate(['albums']);\n      });\n  }\n\n  Cancel(): void\n  {\n      this.router.navigate(['albums']);\n  }\n}","<div class=\"container\">\n  <div class=\"row\">\n\n    <div class=\"col-md-8\">\n      <h1><span class=\"badge badge-dark\" id=\"header\">Create Album</span></h1>\n      <hr>\n      <form [formGroup]=\"albumForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Name\">Album Name:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Name\">\n            <div *ngIf=\"submitted && albumForm.controls.Name.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Name.errors.required\">Album name is required</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Artist\">Artist:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Artist\">\n            <div *ngIf=\"submitted && albumForm.controls.Artist.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Artist.errors.required\">Artist is required</div>\n            </div>\n          </div>\n        </div>\n\n         <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Label\">Label:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\n            <div *ngIf=\"submitted && albumForm.controls.Label.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Label.errors.required\">Label is required</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Stock\">Stock:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Stock\">\n            <div *ngIf=\"submitted && albumForm.controls.Stock.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Stock.errors.required\">Stock is required</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col-md-4\">           \n          </div>\n          <div class=\"col-md-4\">\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;&nbsp;\n            <input type=\"button\" class=\"btn btn-warning\" (click)=\"Cancel()\" value=\"Cancel\">\n        </div>\n          </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Album } from 'src/app/model/album';\nimport { AlbumService } from 'src/app/services/album.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-detail',\n  templateUrl: './edit-detail.component.html',\n  styleUrls: ['./edit-detail.component.css']\n})\nexport class EditDetailComponent implements OnInit {\n  submitted = false;\n  albumForm: any;\n  album: Album;\n  id: any;\n\n  constructor(private formBuilder: FormBuilder,\n      private albumService: AlbumService,\n      private router: Router,\n      private toastr: ToastrService,\n      private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n\n        this.id = this.route.snapshot.paramMap.get('id');\n      \n        if (this.id) {\n          \n            this.albumService.getAlbumById(this.id).subscribe(\n                data => {\n                    this.album = data;\n\n                    this.albumForm = this.formBuilder.group({\n                    Name: ['', Validators.required],\n                    Stock: ['', Validators.required],\n                    Artist: ['', Validators.required],\n                    Label: ['', Validators.required]\n                });\n\n                    this.albumForm = new FormGroup({\n\n                        Artist: new FormControl(this.album.Artist),\n                        Stock: new FormControl(this.album.Stock),\n                        Label: new FormControl(this.album.Label),\n                        Name: new FormControl(this.album.Name),\n                        Id: new FormControl(this.album.Id),\n                    });\n                });\n        }\n    }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.albumForm.invalid) {\n      return;\n   }\n\n    this.albumService.editAlbum(this.albumForm.value)\n      .subscribe( data => {\n        this.toastr.success('success', 'Record updated');\n        this.router.navigate(['albums']);\n      });\n  }\n\n  Cancel(): void\n  {\n      this.router.navigate(['albums']);\n  }\n}","<div class=\"container\">\n    <div class=\"row\">\n\n        <div class=\"col-md-8\">\n            <h1><span class=\"badge badge-dark\" id=\"header\">Edit Album</span></h1>\n            <hr>\n            <form [formGroup]=\"albumForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"this.albumForm\">\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Name\">Album Name:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Name\">\n                        <div *ngIf=\"submitted && albumForm.controls.Name.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Name.errors.required\">Album name is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Artist\">Artist:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Artist\">\n                        <div *ngIf=\"submitted && albumForm.controls.Artist.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Artist.errors.required\">Artist is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Label\">Label:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\n                        <div *ngIf=\"submitted && albumForm.controls.Label.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Label.errors.required\">Label is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Stock\">Stock:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Stock\">\n                        <div *ngIf=\"submitted && albumForm.controls.Stock.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Stock.errors.required\">Stock is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                    </div>\n                    <div class=\"col-md-4\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"Id\">\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;&nbsp;\n                        <input type=\"button\" class=\"btn btn-warning\" (click)=\"Cancel()\" value=\"Cancel\">\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddDetailComponent } from './album/add-detail/add-detail.component';\nimport { AlbumComponent } from './album/album.component';\nimport { EditDetailComponent } from './album/edit-detail/edit-detail.component';\n\nconst routes: Routes = [\n  {path: 'albums',  component: AlbumComponent},\n  {path: '', component: AlbumComponent},\n  {path: 'addDetail', component: AddDetailComponent},\n  {path: 'editDetail/:id', component: EditDetailComponent}\n\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}