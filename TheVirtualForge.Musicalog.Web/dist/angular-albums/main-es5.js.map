{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/button-renderer.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/album.service.ts","webpack:///src/app/album/album.component.ts","webpack:///src/app/album/album.component.html","webpack:///src/app/album/add-detail/add-detail.component.ts","webpack:///src/app/album/add-detail/add-detail.component.html","webpack:///src/app/album/edit-detail/edit-detail.component.ts","webpack:///src/app/album/edit-detail/edit-detail.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","apiBaseUrl","albumWebAPIUrl","gridPageSize","ButtonRendererComponent","params","label","$event","onClick","Function","event","rowData","node","data","selector","template","AppComponent","title","templateUrl","styleUrls","AppModule","forRoot","withComponents","declarations","imports","providers","bootstrap","AlbumService","httpClient","id","subscribe","console","log","get","album","AlbumType","Id","Name","post","put","providedIn","AlbumComponent","albumService","router","toastr","gridOptions","paginationPageSize","columnDefs","headerName","field","sortable","filter","cellRenderer","createHyperLink","bind","cellRendererParams","onDeleteButtonClick","removeRowData","focusedNode","gridApi","getSelectedRows","newRowData","row","frameworkComponents","buttonRenderer","getRowNodeId","getAll","albums","deleteAlbum","ngOnInit","refreshRows","navigate","api","spanElement","document","createElement","innerHTML","editAlbumDetailUrl","addEventListener","preventDefault","AddAlbum","onGridReady","AddDetailComponent","formBuilder","submitted","albumForm","group","required","Stock","Artist","Label","invalid","addAlbum","value","success","onSubmit","Cancel","EditDetailComponent","route","snapshot","paramMap","getAlbumById","editAlbum","routes","path","component","AppRoutingModule","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: '/api',\n  albumWebAPIUrl: 'http://localhost:22157',\n  gridPageSize: 10\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'app-button-renderer',\r\n    template: `\r\n    <button type=\"button\" (click)=\"onClick($event)\">{{label}}</button>\r\n    `\r\n})\r\n\r\nexport class ButtonRendererComponent implements ICellRendererAngularComp {\r\n\r\n    params;\r\n    label: string;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n        this.label = this.params.label || null;\r\n    }\r\n\r\n    refresh(params?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    onClick($event) {\r\n        if (this.params.onClick instanceof Function) {\r\n            // put anything into params u want pass into parents component\r\n            const params = {\r\n                event: $event,\r\n                rowData: this.params.node.data\r\n                // ...something\r\n            }\r\n            this.params.onClick(this.params);\r\n\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Musicalog  - Music Store Catalog';\n}\n","<h1>{{title}}</h1>\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AlbumComponent } from './album/album.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ButtonRendererComponent } from './button-renderer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AlbumService } from './services/album.service';\nimport { AddDetailComponent } from './album/add-detail/add-detail.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { EditDetailComponent } from './album/edit-detail/edit-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlbumComponent, ButtonRendererComponent, AddDetailComponent, EditDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([ButtonRendererComponent])\n  ],\n  providers: [AlbumService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, from} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Album } from '../model/album';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumService {\n\n  constructor(private readonly httpClient: HttpClient) {\n  }\n\n  public deleteAlbum(id: any) {\n    return this.httpClient.delete(`${environment.albumWebAPIUrl}/Delete?id=` + id).subscribe((data) => {\n      console.log(data);\n  });\n }\n\n  public getAll(): Observable<Album[]> {\n      return this.httpClient.get<Album[]>(`${environment.albumWebAPIUrl}/getall`);\n  }\n\n  public getAlbumById(id: number): Observable<Album> {\n      return (this.httpClient.get<Album>(`${environment.albumWebAPIUrl}/getbyid?id=` + id));\n  }\n\n  public addAlbum(album: Album): Observable<any> {\n\n    album.AlbumType = {Id: 2, Name: 'CD'};\n    return this.httpClient.post<string>(`${environment.albumWebAPIUrl}/add`, album);\n  }\n\n    public editAlbum(album: Album): Observable<any>{\n        album.AlbumType = { Id: 2, Name: 'CD' };\n    return this.httpClient.put<Album>(`${environment.albumWebAPIUrl}/edit`, album);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlbumService } from '../services/album.service';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { GridApi, GridOptions } from 'ag-grid-community';\nimport { ToastrService } from 'ngx-toastr';\nimport { Album } from '../model/album';\nimport { ButtonRendererComponent } from './../button-renderer.component';\n\n@Component({\n    selector: 'app-album',\n    templateUrl: './album.component.html',\n    styleUrls: ['./album.component.css']\n})\nexport class AlbumComponent implements OnInit  {\n\n    title = 'Musicalog - Music Catalog Web';\n\n    gridApi: GridApi;\n    private getRowNodeId;\n    private rowData;\n    public albums: Album[];\n    frameworkComponents: any;\n\n    gridOptions: GridOptions = {\n\n        paginationPageSize: environment.gridPageSize\n    }; \n\n    columnDefs = [\n        { headerName: 'Id', field: 'Id', sortable: true, filter: true },\n        { headerName: 'Album Name', field: 'Name', sortable: true, filter: true },\n        { headerName: 'Artist', field: 'Artist', sortable: true, filter: true },\n        { headerName: 'Type', field: 'AlbumType.Name', sortable: true, filter: true },\n        { headerName: 'Stock', field: 'Stock', sortable: true, filter: true },\n        { headerName: 'Edit', field: 'Id', sortable: true, cellRenderer: this.createHyperLink.bind(this), },\n        {\n            headerName: 'Delete',\n            cellRenderer: 'buttonRenderer',\n            cellRendererParams: {\n                onClick: this.onDeleteButtonClick.bind(this),\n                label: 'Remove from Catalog'\n            }\n        }\n    ];\n\n    constructor(private readonly albumService: AlbumService, private router: Router, private toastr: ToastrService) {\n        this.frameworkComponents = {\n            buttonRenderer: ButtonRendererComponent,\n        };\n\n        this.getRowNodeId = (params) => {\n            return params.id;\n        };\n    }\n\n    ngOnInit(): void {\n        this.albumService.getAll().subscribe(\n          data => {\n            this.albums = data;\n            console.log(this.albums)\n          }\n        );\n\n    //     this.albumService.getAll().subscribe( data => this.albums = data);\n      }\n\n    removeRowData = () => {\n        const focusedNode = this.gridApi.getSelectedRows()[0];\n        const newRowData = this.rowData.filter(row => {\n            return row !== focusedNode;\n        });\n        this.rowData = newRowData;\n    }\n\n    onDeleteButtonClick(params): void {\n        console.log(params.data.Id);\n        const id = params.data.Id;\n\n      //  const selectedRows =  this.gridApi.getSelectedRows();\n\n        // if (selectedRows.length == 0) {\n        //   this.toastr.error(\"error\", \"Please select an Album for deletion\");\n        //   return;\n        // }\n\n        // this.albumService.deleteAlbum(id).subscribe(data =>{\n        //     this.toastr.success(\"success\", data);\n        //     this.ngOnInit();\n        //     this.gridApi.refreshRows(null);\n        //   });\n\n        if (id != null) {\n            //  debugger;\n            this.albumService.deleteAlbum(id);\n            this.ngOnInit();\n            this.gridApi.refreshRows(null);\n            this.router.navigate(['albums']);\n        }\n    }\n\n    onGridReady(params): void  {\n        this.gridApi = params.api;\n    }\n\n    createHyperLink(params): any {\n        if (!params.data) {\n            return;\n        }\n     \n        const spanElement = document.createElement('span');\n        spanElement.innerHTML = `<a href=\"${this.editAlbumDetailUrl(params.data.Id)}\">Edit</a> `;\n        spanElement.addEventListener('click',\n            ($event) => {\n                $event.preventDefault();\n                this.router.navigate([this.editAlbumDetailUrl(params.data.Id)]);\n            });\n        return spanElement;\n    }\n\n\n    AddAlbum(): void {\n        this.router.navigate(['addDetail']);\n    }\n\n    editAlbumDetailUrl(id: string): string {\n        return 'editDetail/' + id;\n    }\n}\n\n\n\n","\n<div class=\"jumbotron\">\n   \n    <p class=\"lead\">This is your one stop shop to view all your favourite artists</p>\n</div>\n\n\n <div class=\"row\">\n        <div class=\"col-md-8\"></div>\n        <div class=\"col-md-4\">\n    <button class=\"btn btn-sm btn-success button\" (click)=\"AddAlbum()\">Add Album</button>\n  \n</div>\n<div class=\"row\">\n    \n    <div class=\"col-md-12\">\n\n        <ag-grid-angular class=\"ag-theme-blue\" style=\"width: 100%; height: 300px;\"\n                         [rowData]=\"albums\"\n                         (gridReady)=\"onGridReady($event)\"\n                         [frameworkComponents]=\"frameworkComponents\"\n                         [pagination]=\"true\"\n                         [gridOptions]=\"gridOptions\"\n                         [columnDefs]=\"columnDefs\">\n        </ag-grid-angular>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AlbumService } from 'src/app/services/album.service';\n\n@Component({\n  selector: 'app-add-detail',\n  templateUrl: './add-detail.component.html',\n  styleUrls: ['./add-detail.component.css']\n})\n\nexport class AddDetailComponent implements OnInit {\n  submitted = false;\n  albumForm: any;\n\n  constructor(private formBuilder: FormBuilder, private albumService: AlbumService, private router: Router,private toastr: ToastrService) {}\n\n  ngOnInit(): void {\n    this.albumForm = this.formBuilder.group({\n        Name : [ '', Validators.required],\n        Stock : [ '', Validators.required],\n        Artist : [ '', Validators.required],\n        Label : [ '', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.albumForm.invalid) {\n      return;\n    }\n\n    this.albumService.addAlbum(this.albumForm.value)\n      .subscribe( data => {\n        this.toastr.success('success', 'Record saved');\n        this.router.navigate(['albums']);\n      });\n  }\n\n  Cancel(): void\n  {\n      this.router.navigate(['albums']);\n  }\n}","<div class=\"container\">\n  <div class=\"row\">\n\n    <div class=\"col-md-8\">\n      <h1><span class=\"badge badge-dark\" id=\"header\">Create Album</span></h1>\n      <hr>\n      <form [formGroup]=\"albumForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Name\">Album Name:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Name\">\n            <div *ngIf=\"submitted && albumForm.controls.Name.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Name.errors.required\">Album name is required</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Artist\">Artist:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Artist\">\n            <div *ngIf=\"submitted && albumForm.controls.Artist.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Artist.errors.required\">Artist is required</div>\n            </div>\n          </div>\n        </div>\n\n         <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Label\">Label:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\n            <div *ngIf=\"submitted && albumForm.controls.Label.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Label.errors.required\">Label is required</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"Stock\">Stock:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Stock\">\n            <div *ngIf=\"submitted && albumForm.controls.Stock.errors\" class=\"error\">\n              <div *ngIf=\"albumForm.controls.Stock.errors.required\">Stock is required</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col-md-4\">           \n          </div>\n          <div class=\"col-md-4\">\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;&nbsp;\n            <input type=\"button\" class=\"btn btn-warning\" (click)=\"Cancel()\" value=\"Cancel\">\n        </div>\n          </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Album } from 'src/app/model/album';\nimport { AlbumService } from 'src/app/services/album.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-detail',\n  templateUrl: './edit-detail.component.html',\n  styleUrls: ['./edit-detail.component.css']\n})\nexport class EditDetailComponent implements OnInit {\n  submitted = false;\n  albumForm: any;\n  album: Album;\n  id: any;\n\n  constructor(private formBuilder: FormBuilder,\n      private albumService: AlbumService,\n      private router: Router,\n      private toastr: ToastrService,\n      private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n\n        this.id = this.route.snapshot.paramMap.get('id');\n      \n        if (this.id) {\n          \n            this.albumService.getAlbumById(this.id).subscribe(\n                data => {\n                    this.album = data;\n\n                    this.albumForm = this.formBuilder.group({\n                    Name: ['', Validators.required],\n                    Stock: ['', Validators.required],\n                    Artist: ['', Validators.required],\n                    Label: ['', Validators.required]\n                });\n\n                    this.albumForm = new FormGroup({\n\n                        Artist: new FormControl(this.album.Artist),\n                        Stock: new FormControl(this.album.Stock),\n                        Label: new FormControl(this.album.Label),\n                        Name: new FormControl(this.album.Name),\n                        Id: new FormControl(this.album.Id),\n                    });\n                });\n        }\n    }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.albumForm.invalid) {\n      return;\n   }\n\n    this.albumService.editAlbum(this.albumForm.value)\n      .subscribe( data => {\n        this.toastr.success('success', 'Record updated');\n        this.router.navigate(['albums']);\n      });\n  }\n\n  Cancel(): void\n  {\n      this.router.navigate(['albums']);\n  }\n}","<div class=\"container\">\n    <div class=\"row\">\n\n        <div class=\"col-md-8\">\n            <h1><span class=\"badge badge-dark\" id=\"header\">Edit Album</span></h1>\n            <hr>\n            <form [formGroup]=\"albumForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"this.albumForm\">\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Name\">Album Name:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Name\">\n                        <div *ngIf=\"submitted && albumForm.controls.Name.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Name.errors.required\">Album name is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Artist\">Artist:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Artist\">\n                        <div *ngIf=\"submitted && albumForm.controls.Artist.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Artist.errors.required\">Artist is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Label\">Label:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\n                        <div *ngIf=\"submitted && albumForm.controls.Label.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Label.errors.required\">Label is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label for=\"Stock\">Stock:</label>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Stock\">\n                        <div *ngIf=\"submitted && albumForm.controls.Stock.errors\" class=\"error\">\n                            <div *ngIf=\"albumForm.controls.Stock.errors.required\">Stock is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                    </div>\n                    <div class=\"col-md-4\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"Id\">\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;&nbsp;\n                        <input type=\"button\" class=\"btn btn-warning\" (click)=\"Cancel()\" value=\"Cancel\">\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddDetailComponent } from './album/add-detail/add-detail.component';\nimport { AlbumComponent } from './album/album.component';\nimport { EditDetailComponent } from './album/edit-detail/edit-detail.component';\n\nconst routes: Routes = [\n  {path: 'albums',  component: AlbumComponent},\n  {path: '', component: AlbumComponent},\n  {path: 'addDetail', component: AddDetailComponent},\n  {path: 'editDetail/:id', component: EditDetailComponent}\n\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}