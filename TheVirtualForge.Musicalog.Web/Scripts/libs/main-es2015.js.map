{"version":3,"sources":["./src/app/services/AlbumService.ts","./src/environments/environment.ts","./src/app/button-renderer.component.ts","./src/app/album/details/detail.component.ts","./src/app/album/details/detail.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/album/create/create.component.ts","./src/app/album/create/create.component.html","./src/app/app.module.ts","./src/app/album/album.component.ts","./src/app/album/album.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, from} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\n//import { Customer } from '../models';\r\nimport { Album, Album as IAlbum } from \"../Models/album.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n    constructor(private readonly httpClient: HttpClient) {}\r\n\r\n\r\n    fetch(): Observable<Album[]> {\r\n\r\n        return this.httpClient.get<Album[]>(`${environment.albumWebAPIUrl}/getall`);    \r\n\r\n    }\r\n\r\n    deleteAlbum(id: number) {\r\n       \r\n        return this.httpClient.delete(`${environment.albumWebAPIUrl}/Delete?id=` + id).subscribe((data) => {\r\n            console.log(data);\r\n        });\r\n\r\n    } \r\n\r\n    getAlbumById(id: number): Observable<Album> {\r\n      \r\n        return (this.httpClient.get<Album>(`${environment.albumWebAPIUrl}/getbyid?id=` + id).subscribe((data) => {\r\n            console.log(data);\r\n        })) as any;\r\n\r\n    } \r\n\r\n    addAlbum(album: Album): Observable<any> {\r\n       \r\n        return this.httpClient.post<string>(`${environment.albumWebAPIUrl}/add/`, album);\r\n    }  \r\n}\r\n\r\n    \r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiBaseUrl: '/api',\n    albumWebAPIUrl: \"http://localhost:22157\",\n    gridPageSize:10\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'app-button-renderer',\r\n    template: `\r\n    <button type=\"button\" (click)=\"onClick($event)\">{{label}}</button>\r\n    `\r\n})\r\n\r\nexport class ButtonRendererComponent implements ICellRendererAngularComp {\r\n\r\n    params;\r\n    label: string;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n        this.label = this.params.label || null;\r\n    }\r\n\r\n    refresh(params?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    onClick($event) {\r\n        if (this.params.onClick instanceof Function) {\r\n            // put anything into params u want pass into parents component\r\n            const params = {\r\n                event: $event,\r\n                rowData: this.params.node.data\r\n                // ...something\r\n            }\r\n            this.params.onClick(this.params);\r\n\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ButtonRendererComponent } from \"../../button-renderer.component\"\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\nimport { AlbumService } from \"../../services/AlbumService\";\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'app-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.css']\n})\nexport class AlbumDetailComponent implements OnInit {\n\n    detailForm: any;\n    title = 'Musicalog -  Details Music Catalog Web';\n\n\n\n    constructor(private readonly albumService: AlbumService, private formBuilder: FormBuilder) {\n        //  albumService.addAlbum()\n    }\n\n    ngOnInit(): void {\n        this.detailForm = this.formBuilder.group({\n            \"albumName\": [\"\", Validators.required],\n\n        });\n\n    }\n\n    onSubmit() {\n\n    }\n}\n\n\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n            <h1>\r\n                <span class=\"badge badge-dark\" id=\"header\">Edit Album</span>\r\n            </h1>\r\n            <hr>\r\n            <form  (ngSubmit)=\"onSubmit()\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"albumName\">Album Name:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"albumName\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"artist\">Artist:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"artist\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"label\">Label:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"stock\">Stock:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"stock\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlbumService } from \"./services/AlbumService\";\nimport { ButtonRendererComponent } from './button-renderer.component';\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\n\nimport { Router } from '@angular/router';\nimport {environment} from \"../environments/environment\"\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Musicalog - Music Catalog Web';\n\n    \n}\n\n\n\n","<router-outlet></router-outlet>\r\n<div class=\"jumbotron\">\r\n    <h1>Musicalog  - Music Store Catalog Web</h1>\r\n    <p class=\"lead\">This is your one stop shop to view all your favourite artists</p>\r\n   \r\n    <a [routerLink]=\"['/album']\" >\r\n        Click to view catalogue\r\n    </a>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlbumService } from \"../../services/AlbumService\";\nimport { ButtonRendererComponent } from '../../button-renderer.component';\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class AlbumCreateComponent implements OnInit {\n  \n    createForm: any;\n    title = 'Musicalog - Create Details Music Catalog Web';\n\n   \n\n    constructor(private readonly albumService: AlbumService, private formBuilder: FormBuilder) {\n      //  albumService.addAlbum()\n    }\n\n    ngOnInit(): void {\n        this.createForm = this.formBuilder.group({\n            \"albumName\": [\"\", Validators.required],\n           \n        });\n\n    }\n\n    onSubmit() {\n\n    }\n}\n\n\n\n\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n            <h1>\r\n                <span class=\"badge badge-dark\" id=\"header\">Create Album</span>\r\n            </h1>\r\n            <hr>\r\n            <form  (ngSubmit)=\"onSubmit()\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"albumName\">Album Name:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"albumName\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"artist\">Artist:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"artist\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"label\">Label:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"stock\">Stock:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"stock\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonRendererComponent } from './button-renderer.component';\nimport { AlbumCreateComponent } from \"./album/create/create.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AlbumListComponent } from \"./album/album.component\";\nimport { AlbumDetailComponent } from \"./album/details/detail.component\";\nimport { AppComponent } from \"./app.component\";\n//import { RouterModule, Routes } from '@angular/router';\n\n@NgModule({\n  declarations: [\n        AlbumListComponent, ButtonRendererComponent,\n        AlbumDetailComponent, AlbumCreateComponent, AppComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      AgGridModule.withComponents([ButtonRendererComponent])\n  ],\n  providers: [],\n    bootstrap: [AlbumListComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlbumService } from \"./../services/AlbumService\";\nimport { ButtonRendererComponent } from './../button-renderer.component';\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\nimport { AlbumDetailComponent } from \"./details/detail.component\"\nimport { Router } from '@angular/router';\nimport {environment} from \"../../environments/environment\"\n\n@Component({\n    selector: 'app-album',\n    templateUrl: './album.component.html',\n    styleUrls: ['./album.component.css']\n})\nexport class AlbumListComponent {\n    title = 'Musicalog - Music Catalog Web';\n\n    private gridApi: GridApi;\n    private getRowNodeId;\n    private rowData;\n    frameworkComponents: any;\n\n    gridOptions: GridOptions = {\n      \n        paginationPageSize: environment.gridPageSize\n    };\n    //api: any;\n\n    columnDefs = [\n        { headerName: 'Id', field: 'Id', sortable: true, filter: true },\n        { headerName: 'Album Name', field: 'Name', sortable: true, filter: true },\n        { headerName: 'Artist', field: 'Artist', sortable: true, filter: true },\n        { headerName: 'Type', field: 'AlbumType.Name', sortable: true, filter: true },\n        { headerName: 'Stock', field: 'Stock', sortable: true, filter: true },\n        { headerName: 'Edit', field: 'Id', sortable: true, cellRenderer: this.createHyperLink.bind(this),},\n        {\n            headerName: 'Delete',\n            cellRenderer: 'buttonRenderer',\n            cellRendererParams: {\n                onClick: this.onDeleteButtonClick.bind(this),\n                label: 'Delete'\n            }\n        }\n    ];\n\n    removeRowData = () => {\n        let focusedNode = this.gridApi.getSelectedRows()[0];\n        let newRowData = this.rowData.filter(row => {\n            return row !== focusedNode;\n        });\n        this.rowData = newRowData;\n    };\n\n    onDeleteButtonClick(params) {\n        console.log(params.data.Id);\n        let id = params.data.Id;\n\n        if (id != null) {\n            //  debugger;\n            this.albumService.deleteAlbum(id);\n            this.gridApi.refreshRows(null);\n        }\n    }\n\n    albums = this.albumService.fetch();\n\n    onGridReady(params) {\n        this.gridApi = params.api;\n        this.albums = this.albumService.fetch();\n    }\n\n    createHyperLink(params): any {\n        if (!params.data) {\n            return;\n        }\n        const spanElement = document.createElement('span');\n        spanElement.innerHTML = `<a href=\"${this.homeUrl}\" > Edit </a> `;\n        spanElement.addEventListener('click',\n            ($event) => {\n                $event.preventDefault();\n                this.router.navigate([this.homeUrl]);\n            });\n        return spanElement;\n    }\n\n    get homeUrl(): string {\n        return 'details';\n    }\n\n    constructor(private readonly albumService: AlbumService, private router: Router) {\n        this.frameworkComponents = {\n            buttonRenderer: ButtonRendererComponent,\n        }\n\n        this.getRowNodeId = (params) => {\n            return params.id\n        }\n    }\n\n    \n    CreateAlbum() {\n        this.router.navigate(['create']);\n    }\n}\n\n\n\n","<div class=\"jumbotron\">\r\n    <h1>Musicalog  - Music Store Catalog Web</h1>\r\n    <p class=\"lead\">This is your one stop shop to view all your favourite artists</p>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"row\">\r\n    <button class=\"btn btn-sm btn-success button\" (click)=\"CreateAlbum()\">Create Album</button>\r\n\r\n    <div class=\"col-md-12\">\r\n\r\n        <ag-grid-angular class=\"ag-theme-alpine\" style=\"width: 100%; height: 700px;\"\r\n                         [rowData]=\"albums | async\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                         [frameworkComponents]=\"frameworkComponents\"\r\n                         [pagination]=\"true\"\r\n                         [gridOptions]=\"gridOptions\"\r\n                         [columnDefs]=\"columnDefs\">\r\n        </ag-grid-angular>\r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AlbumCreateComponent } from \"./album/create/create.component\"\r\nimport { AlbumDetailComponent } from \"./album/details/detail.component\";\r\nimport { AlbumListComponent } from \"./album/album.component\";\r\n\r\nconst routes: Routes = [\r\n   \r\n\r\n    { path: 'detail/:id', component: AlbumDetailComponent },\r\n    { path: '', component: AlbumListComponent },\r\n { path: 'create', component: AlbumCreateComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}