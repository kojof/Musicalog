{"version":3,"sources":["webpack:///src/app/services/AlbumService.ts","webpack:///src/environments/environment.ts","webpack:///src/app/button-renderer.component.ts","webpack:///src/app/album/details/detail.component.ts","webpack:///src/app/album/details/detail.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/album/create/create.component.ts","webpack:///src/app/album/create/create.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/album/album.component.ts","webpack:///src/app/album/album.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AlbumService","httpClient","get","albumWebAPIUrl","id","subscribe","data","console","log","album","post","providedIn","environment","production","apiBaseUrl","gridPageSize","ButtonRendererComponent","params","label","$event","onClick","Function","event","rowData","node","selector","template","AlbumDetailComponent","albumService","formBuilder","title","detailForm","group","required","onSubmit","templateUrl","styleUrls","AppComponent","AlbumCreateComponent","createForm","AppModule","withComponents","declarations","imports","providers","bootstrap","AlbumListComponent","router","gridOptions","paginationPageSize","columnDefs","headerName","field","sortable","filter","cellRenderer","createHyperLink","bind","cellRendererParams","onDeleteButtonClick","removeRowData","focusedNode","gridApi","getSelectedRows","newRowData","row","albums","fetch","frameworkComponents","buttonRenderer","getRowNodeId","Id","deleteAlbum","refreshRows","api","spanElement","document","createElement","innerHTML","homeUrl","addEventListener","preventDefault","navigate","CreateAlbum","onGridReady","routes","path","component","AppRoutingModule","forRoot","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, from} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\n//import { Customer } from '../models';\r\nimport { Album, Album as IAlbum } from \"../Models/album.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n    constructor(private readonly httpClient: HttpClient) {}\r\n\r\n\r\n    fetch(): Observable<Album[]> {\r\n\r\n        return this.httpClient.get<Album[]>(`${environment.albumWebAPIUrl}/getall`);    \r\n\r\n    }\r\n\r\n    deleteAlbum(id: number) {\r\n       \r\n        return this.httpClient.delete(`${environment.albumWebAPIUrl}/Delete?id=` + id).subscribe((data) => {\r\n            console.log(data);\r\n        });\r\n\r\n    } \r\n\r\n    getAlbumById(id: number): Observable<Album> {\r\n      \r\n        return (this.httpClient.get<Album>(`${environment.albumWebAPIUrl}/getbyid?id=` + id).subscribe((data) => {\r\n            console.log(data);\r\n        })) as any;\r\n\r\n    } \r\n\r\n    addAlbum(album: Album): Observable<any> {\r\n       \r\n        return this.httpClient.post<string>(`${environment.albumWebAPIUrl}/add/`, album);\r\n    }  \r\n}\r\n\r\n    \r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiBaseUrl: '/api',\n    albumWebAPIUrl: \"http://localhost:22157\",\n    gridPageSize:10\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\n\r\n@Component({\r\n    selector: 'app-button-renderer',\r\n    template: `\r\n    <button type=\"button\" (click)=\"onClick($event)\">{{label}}</button>\r\n    `\r\n})\r\n\r\nexport class ButtonRendererComponent implements ICellRendererAngularComp {\r\n\r\n    params;\r\n    label: string;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n        this.label = this.params.label || null;\r\n    }\r\n\r\n    refresh(params?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    onClick($event) {\r\n        if (this.params.onClick instanceof Function) {\r\n            // put anything into params u want pass into parents component\r\n            const params = {\r\n                event: $event,\r\n                rowData: this.params.node.data\r\n                // ...something\r\n            }\r\n            this.params.onClick(this.params);\r\n\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ButtonRendererComponent } from \"../../button-renderer.component\"\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\nimport { AlbumService } from \"../../services/AlbumService\";\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'app-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.css']\n})\nexport class AlbumDetailComponent implements OnInit {\n\n    detailForm: any;\n    title = 'Musicalog -  Details Music Catalog Web';\n\n\n\n    constructor(private readonly albumService: AlbumService, private formBuilder: FormBuilder) {\n        //  albumService.addAlbum()\n    }\n\n    ngOnInit(): void {\n        this.detailForm = this.formBuilder.group({\n            \"albumName\": [\"\", Validators.required],\n\n        });\n\n    }\n\n    onSubmit() {\n\n    }\n}\n\n\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n            <h1>\r\n                <span class=\"badge badge-dark\" id=\"header\">Edit Album</span>\r\n            </h1>\r\n            <hr>\r\n            <form  (ngSubmit)=\"onSubmit()\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"albumName\">Album Name:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"albumName\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"artist\">Artist:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"artist\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"label\">Label:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"stock\">Stock:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"stock\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlbumService } from \"./services/AlbumService\";\nimport { ButtonRendererComponent } from './button-renderer.component';\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\n\nimport { Router } from '@angular/router';\nimport {environment} from \"../environments/environment\"\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Musicalog - Music Catalog Web';\n\n    \n}\n\n\n\n","<router-outlet></router-outlet>\r\n<div class=\"jumbotron\">\r\n    <h1>Musicalog  - Music Store Catalog Web</h1>\r\n    <p class=\"lead\">This is your one stop shop to view all your favourite artists</p>\r\n   \r\n    <a [routerLink]=\"['/album']\" >\r\n        Click to view catalogue\r\n    </a>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlbumService } from \"../../services/AlbumService\";\nimport { ButtonRendererComponent } from '../../button-renderer.component';\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class AlbumCreateComponent implements OnInit {\n  \n    createForm: any;\n    title = 'Musicalog - Create Details Music Catalog Web';\n\n   \n\n    constructor(private readonly albumService: AlbumService, private formBuilder: FormBuilder) {\n      //  albumService.addAlbum()\n    }\n\n    ngOnInit(): void {\n        this.createForm = this.formBuilder.group({\n            \"albumName\": [\"\", Validators.required],\n           \n        });\n\n    }\n\n    onSubmit() {\n\n    }\n}\n\n\n\n\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n            <h1>\r\n                <span class=\"badge badge-dark\" id=\"header\">Create Album</span>\r\n            </h1>\r\n            <hr>\r\n            <form  (ngSubmit)=\"onSubmit()\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"albumName\">Album Name:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"albumName\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"artist\">Artist:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"artist\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"label\">Label:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Label\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <label for=\"stock\">Stock:</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"stock\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\"></div>\r\n                    <div class=\"col-md-4\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonRendererComponent } from './button-renderer.component';\nimport { AlbumCreateComponent } from \"./album/create/create.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AlbumListComponent } from \"./album/album.component\";\nimport { AlbumDetailComponent } from \"./album/details/detail.component\";\nimport { AppComponent } from \"./app.component\";\n//import { RouterModule, Routes } from '@angular/router';\n\n@NgModule({\n  declarations: [\n        AlbumListComponent, ButtonRendererComponent,\n        AlbumDetailComponent, AlbumCreateComponent, AppComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      AgGridModule.withComponents([ButtonRendererComponent])\n  ],\n  providers: [],\n    bootstrap: [AlbumListComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlbumService } from \"./../services/AlbumService\";\nimport { ButtonRendererComponent } from './../button-renderer.component';\nimport { GridOptions, ColDef, GridReadyEvent, ColumnApi, GridApi } from \"ag-grid-community\";\nimport { AlbumDetailComponent } from \"./details/detail.component\"\nimport { Router } from '@angular/router';\nimport {environment} from \"../../environments/environment\"\n\n@Component({\n    selector: 'app-album',\n    templateUrl: './album.component.html',\n    styleUrls: ['./album.component.css']\n})\nexport class AlbumListComponent {\n    title = 'Musicalog - Music Catalog Web';\n\n    private gridApi: GridApi;\n    private getRowNodeId;\n    private rowData;\n    frameworkComponents: any;\n\n    gridOptions: GridOptions = {\n      \n        paginationPageSize: environment.gridPageSize\n    };\n    //api: any;\n\n    columnDefs = [\n        { headerName: 'Id', field: 'Id', sortable: true, filter: true },\n        { headerName: 'Album Name', field: 'Name', sortable: true, filter: true },\n        { headerName: 'Artist', field: 'Artist', sortable: true, filter: true },\n        { headerName: 'Type', field: 'AlbumType.Name', sortable: true, filter: true },\n        { headerName: 'Stock', field: 'Stock', sortable: true, filter: true },\n        { headerName: 'Edit', field: 'Id', sortable: true, cellRenderer: this.createHyperLink.bind(this),},\n        {\n            headerName: 'Delete',\n            cellRenderer: 'buttonRenderer',\n            cellRendererParams: {\n                onClick: this.onDeleteButtonClick.bind(this),\n                label: 'Delete'\n            }\n        }\n    ];\n\n    removeRowData = () => {\n        let focusedNode = this.gridApi.getSelectedRows()[0];\n        let newRowData = this.rowData.filter(row => {\n            return row !== focusedNode;\n        });\n        this.rowData = newRowData;\n    };\n\n    onDeleteButtonClick(params) {\n        console.log(params.data.Id);\n        let id = params.data.Id;\n\n        if (id != null) {\n            //  debugger;\n            this.albumService.deleteAlbum(id);\n            this.gridApi.refreshRows(null);\n        }\n    }\n\n    albums = this.albumService.fetch();\n\n    onGridReady(params) {\n        this.gridApi = params.api;\n        this.albums = this.albumService.fetch();\n    }\n\n    createHyperLink(params): any {\n        if (!params.data) {\n            return;\n        }\n        const spanElement = document.createElement('span');\n        spanElement.innerHTML = `<a href=\"${this.homeUrl}\" > Edit </a> `;\n        spanElement.addEventListener('click',\n            ($event) => {\n                $event.preventDefault();\n                this.router.navigate([this.homeUrl]);\n            });\n        return spanElement;\n    }\n\n    get homeUrl(): string {\n        return 'details';\n    }\n\n    constructor(private readonly albumService: AlbumService, private router: Router) {\n        this.frameworkComponents = {\n            buttonRenderer: ButtonRendererComponent,\n        }\n\n        this.getRowNodeId = (params) => {\n            return params.id\n        }\n    }\n\n    \n    CreateAlbum() {\n        this.router.navigate(['create']);\n    }\n}\n\n\n\n","<div class=\"jumbotron\">\r\n    <h1>Musicalog  - Music Store Catalog Web</h1>\r\n    <p class=\"lead\">This is your one stop shop to view all your favourite artists</p>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"row\">\r\n    <button class=\"btn btn-sm btn-success button\" (click)=\"CreateAlbum()\">Create Album</button>\r\n\r\n    <div class=\"col-md-12\">\r\n\r\n        <ag-grid-angular class=\"ag-theme-alpine\" style=\"width: 100%; height: 700px;\"\r\n                         [rowData]=\"albums | async\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                         [frameworkComponents]=\"frameworkComponents\"\r\n                         [pagination]=\"true\"\r\n                         [gridOptions]=\"gridOptions\"\r\n                         [columnDefs]=\"columnDefs\">\r\n        </ag-grid-angular>\r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AlbumCreateComponent } from \"./album/create/create.component\"\r\nimport { AlbumDetailComponent } from \"./album/details/detail.component\";\r\nimport { AlbumListComponent } from \"./album/album.component\";\r\n\r\nconst routes: Routes = [\r\n   \r\n\r\n    { path: 'detail/:id', component: AlbumDetailComponent },\r\n    { path: '', component: AlbumListComponent },\r\n { path: 'create', component: AlbumCreateComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}